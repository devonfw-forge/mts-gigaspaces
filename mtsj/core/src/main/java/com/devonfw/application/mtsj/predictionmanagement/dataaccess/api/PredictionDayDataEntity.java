package com.devonfw.application.mtsj.predictionmanagement.dataaccess.api;import org.openspaces.core.GigaSpace;import com.devonfw.application.mtsj.dishmanagement.dataaccess.api.DishEntity;import com.devonfw.application.mtsj.general.dataaccess.api.ApplicationPersistenceEntity;import com.devonfw.application.mtsj.predictionmanagement.common.api.PredictionDayData;import com.devonfw.application.mtsj.xap.BeanUtils;import com.gigaspaces.annotation.pojo.SpaceClass;import com.gigaspaces.annotation.pojo.SpaceExclude;@SpaceClasspublic class PredictionDayDataEntity extends ApplicationPersistenceEntity implements PredictionDayData {  private static final long serialVersionUID = 1L;  private DishEntity dish;  private Integer timestamp;  private Double forecast;  @SpaceExclude  public DishEntity getDish() {    GigaSpace gigaspace = BeanUtils.getBean(GigaSpace.class);    DishEntity queriedDish = gigaspace.readById(DishEntity.class, getDishId());    return queriedDish;  }  public void setDish(DishEntity dish) {    this.dish = dish;  }  @Override  public String getDishId() {    if (this.dish == null) {      return null;    }    return this.dish.getId();  }  @Override  public void setDishId(String dishId) {    if (dishId == null) {      this.dish = null;    } else {      DishEntity dishEntity = new DishEntity();      dishEntity.setId(dishId);      this.dish = dishEntity;    }  }  @Override  @SpaceExclude  public String getDishName() {    if (this.dish == null) {      return null;    }    return this.dish.getName();  }  @Override  public void setDishName(String dishName) {    if (dishName == null) {      this.dish = null;    } else {      DishEntity dishEntity = new DishEntity();      dishEntity.setName(dishName);      this.dish = dishEntity;    }  }  @Override  public Integer getTimestamp() {    return this.timestamp;  }  @Override  public void setTimestamp(Integer timestamp) {    this.timestamp = timestamp;  }  @Override  public Double getForecast() {    return this.forecast;  }  @Override  public void setForecast(Double forecast) {    this.forecast = forecast;  }}